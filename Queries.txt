create table with srid 3857

create Table trip_paderno_treviolo_t_w_c as
(select id, ST_Transform(geom, 3857) AS geom from public."trip_paderno_treviolo-T-W-C_tracks")


3)
--comment: create a table for trip's segments, since ST_Split() returns a GEOMETRYCOLLECTION, so we'll need to extract each linestring from the collection through ST_Dump //https://postgis.net/docs/ST_Dump.html --
create Table trip_paderno_treviolo_segments as
(select  row_number() over () as id, geom from
(SELECT(ST_Dump(
		ST_Split(lineString.geom,
         (SELECT ST_Collect(changePoint.geom) AS geom FROM public."trip_paderno_treviolo-T-W-C_waypoints" AS changePoint
		  WHERE ST_Intersects(lineString.geom, changePoint.geom)
       	 ))
		)).geom as geom
FROM public."trip_paderno_treviolo-T-W-C_tracks" AS lineString))

--comment: add columns: start_time, end_time, duration and segment length.
Alter table trip_paderno_treviolo_segments
add column start_time timestamp,
add column end_time timestamp,
add column duration interval,
add column "length" double precision

--comment: update each segment through points'data intersected with such a segment. Note that srid 3857 uses meters as unit of measurement
update trip_paderno_treviolo_segments segment
set start_time = (select min(time) from public."trip_paderno_treviolo-T-W-C_waypoints" as changePoint
				 where ST_Intersects(changePoint.geom, segment.geom)),
end_time = (select max(time) from public."trip_paderno_treviolo-T-W-C_waypoints" as changePoint
				 where ST_Intersects(changePoint.geom, segment.geom)),
"length" = ST_length(ST_Transform(geom, 3857))

update trip_paderno_treviolo_segments
set duration = end_time - start_time

4)
in point 3, we have already used ST_Transform(geom, 3857) because srid 3857 uses meters as unit of measurement.

5)
--comment: epoch represents the total value in seconds
Select id, geom, "length"/ Extract(epoch from duration) as speed
from trip_paderno_treviolo_segments

OR 

update trip_paderno_treviolo_segments
set speed = "length"/ Extract(epoch from duration)

6)t = d/s

-a straightforward solution is using k-means, but it doesn't consider the temporal dimension during points' clustering which makes it partially unaccurate regarding the ground truth.

create Table trip_paderno_treviolo_kmeans_clusters
as (select *,
ST_ClusterKMeans(geom, 3 ) over() as cluster_id
from (select geom from
(select (ST_DumpPoints(ST_Transform(geom, 3857))).geom as geom
from public."trip_paderno_treviolo-T-W-C_tracks")))

--comment: needs to be ordered by timestamps not id
select row_number() over () as id, ST_MakeLine(geom order by id) as geom
from trip_paderno_treviolo_kmeans_clusters
group by cluster_id


create Table trip_paderno_treviolo_segments_points 
as (select row_number() over () as id, geom,
	("segment_start_time" + CAST((((ST_Distance("segment_start_point", geom)/"segment_speed") * 1000)::integer) AS interval 'millisecond')) as time
	from (select seg.start_time as segment_start_time, ST_StartPoint(ST_Transform(seg.geom, 3857)) as segment_start_point,
	seg.speed as segment_speed,
	 (ST_DumpPoints(ST_Transform(seg.geom, 3857))).geom as geom
	from trip_paderno_treviolo_segments as seg
   )
)




